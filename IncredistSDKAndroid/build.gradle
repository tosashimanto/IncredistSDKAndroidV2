apply plugin: 'com.android.library'
apply plugin: 'checkstyle'

android {
    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion '28.0.3'

    defaultConfig {
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode 2
        versionName "1.0.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}


def checkstyleConfigDir = new File(buildscript.sourceFile.parentFile.parentFile, 'config/checkstyle')

checkstyle {
    toolVersion = "8.4"
    configFile = new File(checkstyleConfigDir, 'checkstyle.xml')
    configProperties.config_loc = checkstyleConfigDir
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.android.support:support-annotations:27.1.1'
    testImplementation 'junit:junit:4.12'
}

task("checkstyleDebug", type: Checkstyle,
        dependsOn: "assembleDebug") {
    group 'Reporting'
    description "Generate debug Checkstyle reports."

    ignoreFailures = true
    reports {
        xml.enabled = true
        html.enabled = true
    }

    showViolations true  // CheckStyle解析結果をStdOutに出力する
    source = files(android.sourceSets.main.java.srcDirs)
    classpath = files(configurations.compile.files)
}

